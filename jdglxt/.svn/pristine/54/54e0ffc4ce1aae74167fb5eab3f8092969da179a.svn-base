package org.lanqiao.jdmrg.dao;

import java.io.Serializable;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import org.lanqiao.jdmrg.bean.Roomer;
import org.lanqiao.jdmrg.common.DatabaseCrud;
import org.lanqiao.jdmrg.common.JdbcCommon;


public class RoomerDao implements IBaseDao<Roomer>{
static Roomer rer = null ;
	@Override
	public boolean add(Roomer obj) {
		String sql = "insert into Roomer(accountNum,name,contact,roomNo,roomType,roomPrice,firstTime,lastTime,dayNum,inTime,id) values(?,?,?,?,?,?,?,?,?,?,?)";
		Object values[] = {obj.getAccountNum(),obj.getName(),obj.getContact(),obj.getRoomNo(),obj.getRoomType(),obj.getRoomPrice(),obj.getFirstTime(),obj.getLastTime(),obj.getDayNum(),obj.getInTime(),obj.getId()};
		boolean ret = (boolean) DatabaseCrud.doCrud(sql, values);
		JdbcCommon.closeConnection();
		return ret;
	}

	@Override
	public boolean deleteById(Serializable accountNum) {
		String sql = "delete from Roomer where accountNum = ?";
		boolean ret = (boolean) DatabaseCrud.doCrud(sql, accountNum);		
		return ret;
	}

	@Override
	public boolean update(Roomer obj) {
		String sql = "update Roomer set name = ?,contact = ?,roomNo = ?,roomType = ?,roomPrice = ?,firstTime = ?,lastTime = ?,dayNum = ?,inTime = ?,id = ? where accountNum = ?";
		Object values[] = {obj.getAccountNum(),obj.getName(),obj.getContact(),obj.getRoomNo(),obj.getRoomType(),obj.getRoomPrice(),obj.getFirstTime(),obj.getLastTime(),obj.getDayNum(),obj.getInTime(),obj.getId()};
		boolean ret = (boolean) DatabaseCrud.doCrud(sql, values);
		JdbcCommon.closeConnection();
		return ret;
	}

	@Override
	public Roomer findById(Serializable accountNum) {
		String sql = "select accountNum,name,contact,roomNo,roomType,roomPrice,firstTime,lastTime,dayNum,inTime,id from Roomer where accountNum = ?";
		try {
			ResultSet rs = (ResultSet)DatabaseCrud.doCrud(sql, accountNum);
			if (null != rs && rs.next()) {
				rer = new Roomer(rs.getString("accountNum"),rs.getString("name"),rs.getString("contact"),rs.getString("roomNo"),rs.getString("roomType"),rs.getString("roomPrice"),rs.getString("firstTime"),rs.getString("lastTime"),rs.getInt("dayNum"),rs.getString("inTime"),rs.getString("id"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return rer;
	}

	@Override
	public ArrayList<Roomer> listAll() {
		ArrayList<Roomer> ls = new ArrayList<>();
		String sql = "select accountNum,name,contact,roomNo,roomType,roomPrice,firstTime,lastTime,dayNum,inTime,id from Roomer";
		try {
			ResultSet rs = (ResultSet)DatabaseCrud.doCrud(sql);
			if(null != rs ){
				while ( rs.next()) {
					rer = new Roomer(rs.getString("accountNum"),rs.getString("name"),rs.getString("contact"),rs.getString("roomNo"),rs.getString("roomType"),rs.getString("roomPrice"),rs.getString("firstTime"),rs.getString("lastTime"),rs.getInt("dayNum"),rs.getString("inTime"),rs.getString("id"));
					ls.add(rer);
			}}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return ls;
	}

	@Override
	public boolean isExist(Serializable accountNum) {
		boolean ret = false;
		try {
			String sql = "select 1 from Roomer where accountNum = ? ";
			ResultSet rs = (ResultSet)DatabaseCrud.doCrud(sql,accountNum);
			ret = rs != null && rs.next();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return ret;
	
	}

	

}
